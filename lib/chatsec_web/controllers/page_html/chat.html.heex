<div class="container grid grid-rows-3 bg-gray-900 min-w-full text-white">
  <section class="section flex-grow row-span-2 p-4">
    <h1 class="title text-2xl font-bold mb-4">Messages.</h1>
    <div
      id="messages"
      role="log"
      aria-live="polite"
      class="border p-4 border-gray-700 rounded-lg overflow-y-auto bg-gray-800 shadow h-80 md:h-[32rem] flex flex-col gap-2"
    >
    </div>

    <div class="mt-3 flex flex-col md:flex-row justify-between items-start md:items-center">
      <div id="users" class="mb-4 md:mb-0">
        <h2 class="text-2xl font-bold mb-2">Online.</h2>
        <ul id="usernames" class="flex flex-wrap space-x-2 text-white"></ul>
      </div>

      <div class="flex justify-end space-x-2" id="CTA">
        <button
          onclick="copyChatUrl()"
          class="bg-cyan-500 hover:bg-cyan-700 text-white font-bold py-2 px-4 rounded"
        >
          Invite user
        </button>
        <button
          onclick="showDeleteChatModal()"
          class="bg-pink-500 hover:bg-pink-700 text-white font-bold py-2 px-4 rounded"
        >
          Delete
          room
        </button>
      </div>
    </div>
  </section>

  <section class="section is-small fixed bottom-0 w-full bg-gray-900 p-4 row-span-1">
    <div>
      <textarea
        id="chat-input"
        class="textarea w-full border border-gray-700 rounded-lg resize-none focus:outline-none focus:ring-2 focus:ring-green-500 focus:border-transparent bg-gray-800 text-white placeholder-gray-500"
        placeholder="Write a message.."
      ></textarea>
      <p class="text-sm text-gray-500 mt-2">Press `Enter` to send message.</p>
    </div>
  </section>
</div>

<script type="text/javascript">
  window.addEventListener("load", (event) => {
    let username = sessionStorage.getItem('username');
    let channel = connectToChannel(username)
    let chatInput = document.querySelector("#chat-input");
    let messagesContainer = document.querySelector("#messages");
    sendAndReceiveMessages(chatInput, username, channel, messagesContainer);
    
    const messages = document.getElementById('messages');
    function autoScroll() {
      messages.scrollTop = messages.scrollHeight;
    }
    const observer = new MutationObserver(() => {
      autoScroll();
    });
    observer.observe(messages, {
      childList: true
    });
  });
</script>

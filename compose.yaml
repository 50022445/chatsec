services:
  chatsec:
    restart: unless-stopped
    container_name: "chatsec"
    build:
      context: .
    env_file:
      - .env
    environment: 
      PHX_SERVER: yes
      PHX_HOST: "chatsec.0x63686174.com"
    labels:
      - traefik.http.services.chatsec.loadbalancer.server.port=4000
      - traefik.enable=true
      - traefik.http.routers.chatsec.tls=true
      - traefik.http.routers.chatsec.tls.certresolver=myresolver
      # Rate limit for 6 requests per minute
      - "traefik.http.middlewares.test-ratelimit.ratelimit.average=6"
      - "traefik.http.middlewares.test-ratelimit.ratelimit.period=1m"
    depends_on:
      - reverse-proxy
  reverse-proxy:
    image: traefik:v2.11
    restart: unless-stopped
    command:
      - "--log.level=DEBUG"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      # redirect to secure version
      - "--entrypoints.web.http.redirections.entryPoint.to=websecure"
      - "--entrypoints.web.http.redirections.entryPoint.scheme=https"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.myresolver.acme.caserver=https://acme-staging-v02.api.letsencrypt.org/directory"
      - "--certificatesresolvers.myresolver.acme.email=letsencryptchatsec.universe845@passmail.net"
      - "--certificatesresolvers.myresolver.acme.storage=acme.json"
      - "--certificatesresolvers.myresolver.acme.httpchallenge.entrypoint=web"
      - "--providers.docker.defaultRule=Host(`{{ index .Labels \"com.docker.compose.service\" }}.0x63686174.com`)"
    ports:
      # The HTTP port
      - "80:80"
      - "443:443"
    volumes:
      # So that Traefik can listen to the Docker events
      - /var/run/docker.sock:/var/run/docker.sock
      # Raises error if acme.json does not exist 
      - type: bind
        source: ./acme.json
        target: /acme.json
        bind:
          create_host_path: false
    labels:
      - "traefik.http.routers.chatsec.rule=Host(`chatsec.docker.localhost`)"
